What is the solution when :

- A developer has to manage or track changes to the code.
- When multiple developers have to work simutenously and contribute to final code
- When we have to track who or when changes were made.
- When we have to manage all the older versions of the code.

The Solution is: SOURCE CODE MANAGEMENT SYSTEM or VERSION CONTROL SYSTEM

What is a Version Control System:
_____________________________________________

- A system that documents changes made to a file or set of files.
- manages multiple revisions to files
- manages files from multiple users.
"It is snapshot of your project overtime"

Types of Version Control System:
______________________________________________

1. Local Version Control
- One to One interation between developer and the local Version System.
Challenge:
This system doesnot support managing of data when multiple developers are working parallely on a project
Eg: RCS

2. Centralized Version Control System
- In this system multiple developers are working together and can move and track there chnages on to a Central repository.

eg: CVS,subversion, perforce, TFS(team foundation Version Control) etc

3. Distributed Version Control System

This system is Distributed in nature where in all the developers will have a working Directory, local repository and a Central repository

eg: GIT, Mercurial, BITKeeper, Darcas, Bazzar etc.

____________________________________________________________

What is GIT?

- its open source and is developed by Linus Torvalds.
- Distributed version Control System
- Tool that tracks changes in your code/files over time.
- Working Directory, Stagging area, local repository and remote repository
- GIT stores the data in sanpshots that is the reson that its performance is very fast and it can store huge amount of data.

What is GIT hub?

- GitHub is the website where we host all of our git repositories.
***************************************
Connect to Ssh client

# ssh -i "pemkey" ussername@public ip adress
# ssh -i "dockertoday.pem" ec2-user@publicipaddress


GIT COMMANDS:
_____________________________________________________________

Install GIT:

# sudo su -
# yum install git
# git --version

*************************
Scenario1: Create a Working Directory

# mkdir gitDemo
# cd gitDemo
# mkdir project
# cd project
- Working directory is ready

Initiating a Local repository in working directory

# git init
# ll -al

Local repository intiated in project working directory. Now all files in working directory will be tracked by git.

***********************************************
Scenario 2: Creating a new file and adding it to local repository

# vim file1
# git status  // file is not tracked by git
# git add file1
# git status   // file is in stagging area and not commited yet
# git commit -m "commit file1"
# ls
# git ls-files   // file is now being tracked by GIT

Again one more example:

# vim file2
# git status  // file is not tracked by git
# git add file2
# git status   // file is in stagging area and not commited yet
# git commit -m "commit file2"
# ls
# git ls-files   // file is now being tracked by GIT

****************************************************
Scanrio 3: Check commit history or log

# git log  // will show the commit history in detail
# git log --oneline 
# git show commitid   // will show chnages happened in this commit
*****************************************************
Scenario4: COMMIT and ADD an Existing file

# vim file2   // open exisiting file and make chnages to it
# git status   // file is being tracked only chnages have to be commited
# git commit -a -m "modified file2"


REMOTE REPOSITORY:
***********************************************

Create login and password of GITHUB

Create a new repository on the git hub

Copy the URL of the repository to  add local repo to external repo:

# git remote add origin [URL of externalrepo]

# git branch main 

# git push origin main
Username: 
Passowrd: 
//Now go to external repo and see all the files of master will be available


